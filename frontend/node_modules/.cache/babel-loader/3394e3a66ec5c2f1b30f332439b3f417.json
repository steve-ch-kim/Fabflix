{"ast":null,"code":"var _jsxFileName = \"/Users/stevekim/Desktop/uci/cs122b/FE2-Search/src/pages/MovieDetail.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { useParams } from 'react-router-dom';\nimport { searchMovie } from \"backend/idm\";\nimport { useUser } from \"../hook/User\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst GetMovie = () => {\n  _s();\n\n  var _movie$genres;\n\n  const {\n    accessToken,\n    setAccessToken,\n    refreshToken,\n    setRefreshToken\n  } = useUser();\n  const [movie, setMovie] = React.useState({});\n  const {\n    movieId\n  } = useParams();\n\n  const getMovie = () => {\n    searchMovie({}, accessToken, movieId).then(response => setMovie(response.data)).catch(error => alert(JSON.stringify(error.response.data, null, 2)));\n  };\n\n  useEffect(() => getMovie(), []);\n  let title, director, rating, budget, revenue, overview;\n\n  if (Object.keys(movie).length === 0) {\n    let title = /*#__PURE__*/_jsxDEV(\"h4\", {\n      className: \"movie-detail\",\n      children: \"Title:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 21\n    }, this);\n\n    let director = /*#__PURE__*/_jsxDEV(\"h4\", {\n      className: \"movie-detail\",\n      children: \"Director:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 24\n    }, this);\n\n    let rating = /*#__PURE__*/_jsxDEV(\"h4\", {\n      className: \"movie-detail\",\n      children: \"Rating:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 22\n    }, this);\n\n    let budget = /*#__PURE__*/_jsxDEV(\"h4\", {\n      className: \"movie-detail\",\n      children: \"Budget:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 22\n    }, this);\n\n    let revenue = /*#__PURE__*/_jsxDEV(\"h4\", {\n      className: \"movie-detail\",\n      children: \"Revenue:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 23\n    }, this);\n\n    let overview = /*#__PURE__*/_jsxDEV(\"h4\", {\n      className: \"movie-detail\",\n      children: \"Overview:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 24\n    }, this);\n  } else {\n    let title = /*#__PURE__*/_jsxDEV(\"h4\", {\n      className: \"movie-detail\",\n      children: [\"Title: \", movie.title]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 21\n    }, this);\n\n    let director = /*#__PURE__*/_jsxDEV(\"h4\", {\n      className: \"movie-detail\",\n      children: [\"Director:  \", movie.director]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 24\n    }, this);\n\n    let rating = /*#__PURE__*/_jsxDEV(\"h4\", {\n      className: \"movie-detail\",\n      children: [\"Rating: \", movie.rating]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 22\n    }, this);\n\n    let budget = /*#__PURE__*/_jsxDEV(\"h4\", {\n      className: \"movie-detail\",\n      children: [\"Budget: \", movie.budget]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 22\n    }, this);\n\n    let revenue = /*#__PURE__*/_jsxDEV(\"h4\", {\n      className: \"movie-detail\",\n      children: [\"Revenue: \", movie.revenue]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 23\n    }, this);\n\n    let overview = /*#__PURE__*/_jsxDEV(\"h4\", {\n      className: \"movie-detail\",\n      children: [\"Overview: \", movie.overview]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 24\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cart-details\",\n      children: [title, director, rating, budget, revenue, overview, (_movie$genres = movie[\"genres\"]) === null || _movie$genres === void 0 ? void 0 : _movie$genres.map(genre => /*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"movie-detail\",\n        children: [\"Genres: \", genre.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"cartButton\",\n      children: \"Add To Cart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"pageButton\",\n      children: \"0\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"pageButton\",\n      children: \"Remove\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n\n_s(GetMovie, \"VfRgpT2nmXQ7trk6j1wS2yjJJH0=\", false, function () {\n  return [useUser, useParams];\n});\n\n_c = GetMovie;\nexport default GetMovie;\n\nvar _c;\n\n$RefreshReg$(_c, \"GetMovie\");","map":{"version":3,"sources":["/Users/stevekim/Desktop/uci/cs122b/FE2-Search/src/pages/MovieDetail.jsx"],"names":["React","useEffect","useParams","searchMovie","useUser","GetMovie","accessToken","setAccessToken","refreshToken","setRefreshToken","movie","setMovie","useState","movieId","getMovie","then","response","data","catch","error","alert","JSON","stringify","title","director","rating","budget","revenue","overview","Object","keys","length","map","genre","name"],"mappings":"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","sourcesContent":["import React, {useEffect} from \"react\";\nimport { useParams } from 'react-router-dom';\nimport {searchMovie} from \"backend/idm\";\nimport {useUser} from \"../hook/User\";\n\nconst GetMovie = () => {\n    const {\n        accessToken, setAccessToken,\n        refreshToken, setRefreshToken\n    } = useUser();\n\n    const [movie, setMovie] = React.useState({});\n    const {movieId} = useParams();\n\n    const getMovie = () => {\n        searchMovie({}, accessToken, movieId)\n            .then(response => setMovie(response.data))\n            .catch(error => alert(JSON.stringify(error.response.data, null, 2)));\n    }\n\n    useEffect(() => getMovie(), []);\n    let title, director, rating, budget, revenue, overview;\n\n    if (Object.keys(movie).length === 0) {\n        let title = <h4 className=\"movie-detail\">Title:</h4>;\n        let director = <h4 className=\"movie-detail\">Director:</h4>;\n        let rating = <h4 className=\"movie-detail\">Rating:</h4>;\n        let budget = <h4 className=\"movie-detail\">Budget:</h4>;\n        let revenue = <h4 className=\"movie-detail\">Revenue:</h4>;\n        let overview = <h4 className=\"movie-detail\">Overview:</h4>;\n    } else {\n        let title = <h4 className=\"movie-detail\">Title: {movie.title}</h4>\n        let director = <h4 className=\"movie-detail\">Director:  {movie.director}</h4>;\n        let rating = <h4 className=\"movie-detail\">Rating: {movie.rating}</h4>;\n        let budget = <h4 className=\"movie-detail\">Budget: {movie.budget}</h4>;\n        let revenue = <h4 className=\"movie-detail\">Revenue: {movie.revenue}</h4>;\n        let overview = <h4 className=\"movie-detail\">Overview: {movie.overview}</h4>;\n    }\n    return (\n        <div>\n            <div className=\"cart-details\">\n                {title}\n                {director}\n                {rating}\n                {budget}\n                {revenue}\n                {overview}\n                {/*{movie[\"movie\"]?.forEach(movie =>*/}\n                {/*    <div>*/}\n                {/*        <h4 className=\"movie-detail\">Title: {movie.title}</h4>*/}\n                {/*        <h4 className=\"movie-detail\">Director: {movie.director}</h4>*/}\n                {/*        <h4 className=\"movie-detail\">Rating: {movie.rating}</h4>*/}\n                {/*        <h4 className=\"movie-detail\">Budget: {movie.budget}</h4>*/}\n                {/*        <h4 className=\"movie-detail\">Revenue: {movie.revenue}</h4>*/}\n                {/*        <h4 className=\"movie-detail\">Overview: {movie.overview}</h4>*/}\n                {/*    </div>*/}\n                {/*)}*/}\n\n                {movie[\"genres\"]?.map(genre =>\n                    <h4 className=\"movie-detail\">Genres: {genre.name}</h4>\n                )}\n            </div>\n            <button  id=\"cartButton\">Add To Cart</button>\n            <button  id=\"pageButton\">0</button>\n            <button  id=\"pageButton\">Remove</button>\n        </div>\n    );\n}\n\nexport default GetMovie;"]},"metadata":{},"sourceType":"module"}